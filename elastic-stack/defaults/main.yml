---
eck_namespace: elasticsearch-sandbox

eck_kibana_namespace: "{{ eck_namespace }}"
eck_kibana_name: kibana-sandbox

eck_elastic_namespace: "{{ eck_namespace }}"
eck_elastic_name: elasticsearch-sandbox

eck_kibana_version: 8.0.1
eck_elastic_version: 8.0.1

# The possible values are:
  # persistent
  # temporary
# By default temporary
eck_volume_type: "temporary"

# The possible values are:
  # DeleteOnScaledownAndClusterDeletion
  # DeleteOnScaledownOnly 
# By default DeleteOnScaledownAndClusterDeletion is in effect, which means that all PersistentVolumeClaims are deleted together with the Elasticsearch cluster.
# However, DeleteOnScaledownOnly keeps the PersistentVolumeClaims when deleting the Elasticsearch cluster.
# If you recreate a deleted cluster with the same name and node sets as before, the existing PersistentVolumeClaims will be adopted by the new cluster.
eck_volume_claim_delete_policy: "DeleteOnScaledownAndClusterDeletion"

eck_volume_claim_resources_requests_storage: "5Gi"
eck_volume_claim_storage_class_name: "standard"
eck_es_multi_zone_enabled: false

eck_kibana:
  count: 1
  config:
    server.publicBaseUrl: "https://kibana.apps-crc.testing"
    elasticsearch.requestHeadersWhitelist:
      - authorization
  env: {}
  host_url: "kibana.apps-crc.testing"
  # resources_requests_memory: 1Gi
  # resources_requests_cpu: 0.5
  # resources_limits_memory: 2.5Gi
  # resources_limits_cpu: 2
  # tolerations:
  #   - key: node-role.kubernetes.io/logging
  #     operator: Exists
  #     effect: NoSchedule
  # affinity:
  #   nodeAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #       - weight: 1
  #         preference:
  #           matchExpressions:
  #           - key: diskType
  #             operator: In
  #             values:
  #             - ssd

eck_elastic_cluster:
  - name: master-data
    count: 2
    config:
      node.roles:
        - master
        - data

  # - name: data
  #   count: 2
  #   config:
  #     node.roles:
  #       - data
  #   volume_type: "persistent"
  #   volume_claim_resources_requests_storage: "5Gi"
  #   volume_claim_storage_class_name: "standard"
  #   resources_requests_memory: 4Gi
  #   resources_requests_cpu: 2
  #   resources_limits_memory: 4Gi
  #   resources_limits_cpu: 2
  #   tolerations:
  #     - key: node-role.kubernetes.io/logging
  #       operator: Exists
  #       effect: NoSchedule
  #   affinity:
  #     nodeAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: environment
  #             operator: In
  #             values:
  #             - e2e
  #             - production
  #       preferredDuringSchedulingIgnoredDuringExecution:
  #         - weight: 1
  #           preference:
  #             matchExpressions:
  #             - key: diskType
  #               operator: In
  #               values:
  #               - ssd
  #     podeAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: environment
  #             operator: In
  #             values:
  #             - e2e
  #             - production
  #       preferredDuringSchedulingIgnoredDuringExecution:
  #         - weight: 1
  #           preference:
  #             matchExpressions:
  #             - key: diskType
  #               operator: In
  #               values:
  #               - ssd
